// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: label.proto

#include "label.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_label_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Label_Parameter_label_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_label_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Label_Parameter_Value_label_2eproto;
namespace PluginAdapter {
namespace Api {
class Label_Parameter_Value_ArrayDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Label_Parameter_Value_Array> _instance;
} _Label_Parameter_Value_Array_default_instance_;
class Label_Parameter_Value_Hash_EntryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Label_Parameter_Value_Hash_Entry> _instance;
} _Label_Parameter_Value_Hash_Entry_default_instance_;
class Label_Parameter_Value_HashDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Label_Parameter_Value_Hash> _instance;
} _Label_Parameter_Value_Hash_default_instance_;
class Label_Parameter_ValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Label_Parameter_Value> _instance;
} _Label_Parameter_Value_default_instance_;
class Label_ParameterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Label_Parameter> _instance;
} _Label_Parameter_default_instance_;
class LabelDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Label> _instance;
} _Label_default_instance_;
}  // namespace Api
}  // namespace PluginAdapter
static void InitDefaultsscc_info_Label_label_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PluginAdapter::Api::_Label_default_instance_;
    new (ptr) ::PluginAdapter::Api::Label();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Label_label_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Label_label_2eproto}, {
      &scc_info_Label_Parameter_label_2eproto.base,}};

static void InitDefaultsscc_info_Label_Parameter_label_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PluginAdapter::Api::_Label_Parameter_default_instance_;
    new (ptr) ::PluginAdapter::Api::Label_Parameter();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Label_Parameter_label_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Label_Parameter_label_2eproto}, {
      &scc_info_Label_Parameter_Value_label_2eproto.base,}};

static void InitDefaultsscc_info_Label_Parameter_Value_label_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PluginAdapter::Api::_Label_Parameter_Value_Array_default_instance_;
    new (ptr) ::PluginAdapter::Api::Label_Parameter_Value_Array();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::PluginAdapter::Api::_Label_Parameter_Value_Hash_Entry_default_instance_;
    new (ptr) ::PluginAdapter::Api::Label_Parameter_Value_Hash_Entry();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::PluginAdapter::Api::_Label_Parameter_Value_Hash_default_instance_;
    new (ptr) ::PluginAdapter::Api::Label_Parameter_Value_Hash();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  {
    void* ptr = &::PluginAdapter::Api::_Label_Parameter_Value_default_instance_;
    new (ptr) ::PluginAdapter::Api::Label_Parameter_Value();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Label_Parameter_Value_label_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Label_Parameter_Value_label_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_label_2eproto[6];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_label_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_label_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_label_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label_Parameter_Value_Array, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label_Parameter_Value_Array, values_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label_Parameter_Value_Hash_Entry, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label_Parameter_Value_Hash_Entry, key_),
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label_Parameter_Value_Hash_Entry, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label_Parameter_Value_Hash, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label_Parameter_Value_Hash, entries_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label_Parameter_Value, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label_Parameter_Value, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label_Parameter_Value, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label_Parameter, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label_Parameter, name_),
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label_Parameter, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label, type_),
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label, label_),
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label, channel_),
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label, parameters_),
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label, timestamp_),
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label, physical_label_),
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Label, correlation_id_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PluginAdapter::Api::Label_Parameter_Value_Array)},
  { 6, -1, sizeof(::PluginAdapter::Api::Label_Parameter_Value_Hash_Entry)},
  { 13, -1, sizeof(::PluginAdapter::Api::Label_Parameter_Value_Hash)},
  { 19, -1, sizeof(::PluginAdapter::Api::Label_Parameter_Value)},
  { 33, -1, sizeof(::PluginAdapter::Api::Label_Parameter)},
  { 40, -1, sizeof(::PluginAdapter::Api::Label)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PluginAdapter::Api::_Label_Parameter_Value_Array_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PluginAdapter::Api::_Label_Parameter_Value_Hash_Entry_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PluginAdapter::Api::_Label_Parameter_Value_Hash_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PluginAdapter::Api::_Label_Parameter_Value_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PluginAdapter::Api::_Label_Parameter_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PluginAdapter::Api::_Label_default_instance_),
};

const char descriptor_table_protodef_label_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013label.proto\022\021PluginAdapter.Api\"\221\007\n\005Lab"
  "el\0220\n\004type\030\001 \001(\0162\".PluginAdapter.Api.Lab"
  "el.LabelType\022\r\n\005label\030\002 \001(\t\022\017\n\007channel\030\003"
  " \001(\t\0226\n\nparameters\030\004 \003(\0132\".PluginAdapter"
  ".Api.Label.Parameter\022\021\n\ttimestamp\030\005 \001(\004\022"
  "\026\n\016physical_label\030\006 \001(\014\022\026\n\016correlation_i"
  "d\030\007 \001(\004\032\221\005\n\tParameter\022\014\n\004name\030\001 \001(\t\0227\n\005v"
  "alue\030\002 \001(\0132(.PluginAdapter.Api.Label.Par"
  "ameter.Value\032\274\004\n\005Value\022\020\n\006string\030\001 \001(\tH\000"
  "\022\021\n\007integer\030\002 \001(\003H\000\022\021\n\007decimal\030\003 \001(\001H\000\022\021"
  "\n\007boolean\030\004 \001(\010H\000\022\016\n\004date\030\005 \001(\004H\000\022\?\n\005arr"
  "ay\030\006 \001(\0132..PluginAdapter.Api.Label.Param"
  "eter.Value.ArrayH\000\022\?\n\006struct\030\007 \001(\0132-.Plu"
  "ginAdapter.Api.Label.Parameter.Value.Has"
  "hH\000\022C\n\nhash_value\030\010 \001(\0132-.PluginAdapter."
  "Api.Label.Parameter.Value.HashH\000\032A\n\005Arra"
  "y\0228\n\006values\030\001 \003(\0132(.PluginAdapter.Api.La"
  "bel.Parameter.Value\032\305\001\n\004Hash\022D\n\007entries\030"
  "\001 \003(\01323.PluginAdapter.Api.Label.Paramete"
  "r.Value.Hash.Entry\032w\n\005Entry\0225\n\003key\030\001 \001(\013"
  "2(.PluginAdapter.Api.Label.Parameter.Val"
  "ue\0227\n\005value\030\002 \001(\0132(.PluginAdapter.Api.La"
  "bel.Parameter.ValueB\006\n\004type\"\'\n\tLabelType"
  "\022\014\n\010STIMULUS\020\000\022\014\n\010RESPONSE\020\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_label_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_label_2eproto_sccs[3] = {
  &scc_info_Label_label_2eproto.base,
  &scc_info_Label_Parameter_label_2eproto.base,
  &scc_info_Label_Parameter_Value_label_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_label_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_label_2eproto = {
  false, false, descriptor_table_protodef_label_2eproto, "label.proto", 956,
  &descriptor_table_label_2eproto_once, descriptor_table_label_2eproto_sccs, descriptor_table_label_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_label_2eproto::offsets,
  file_level_metadata_label_2eproto, 6, file_level_enum_descriptors_label_2eproto, file_level_service_descriptors_label_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_label_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_label_2eproto)), true);
namespace PluginAdapter {
namespace Api {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Label_LabelType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_label_2eproto);
  return file_level_enum_descriptors_label_2eproto[0];
}
bool Label_LabelType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Label_LabelType Label::STIMULUS;
constexpr Label_LabelType Label::RESPONSE;
constexpr Label_LabelType Label::LabelType_MIN;
constexpr Label_LabelType Label::LabelType_MAX;
constexpr int Label::LabelType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

class Label_Parameter_Value_Array::_Internal {
 public:
};

Label_Parameter_Value_Array::Label_Parameter_Value_Array(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  values_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PluginAdapter.Api.Label.Parameter.Value.Array)
}
Label_Parameter_Value_Array::Label_Parameter_Value_Array(const Label_Parameter_Value_Array& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      values_(from.values_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PluginAdapter.Api.Label.Parameter.Value.Array)
}

void Label_Parameter_Value_Array::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Label_Parameter_Value_label_2eproto.base);
}

Label_Parameter_Value_Array::~Label_Parameter_Value_Array() {
  // @@protoc_insertion_point(destructor:PluginAdapter.Api.Label.Parameter.Value.Array)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Label_Parameter_Value_Array::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Label_Parameter_Value_Array::ArenaDtor(void* object) {
  Label_Parameter_Value_Array* _this = reinterpret_cast< Label_Parameter_Value_Array* >(object);
  (void)_this;
}
void Label_Parameter_Value_Array::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Label_Parameter_Value_Array::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Label_Parameter_Value_Array& Label_Parameter_Value_Array::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Label_Parameter_Value_label_2eproto.base);
  return *internal_default_instance();
}


void Label_Parameter_Value_Array::Clear() {
// @@protoc_insertion_point(message_clear_start:PluginAdapter.Api.Label.Parameter.Value.Array)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  values_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Label_Parameter_Value_Array::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .PluginAdapter.Api.Label.Parameter.Value values = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_values(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Label_Parameter_Value_Array::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PluginAdapter.Api.Label.Parameter.Value.Array)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PluginAdapter.Api.Label.Parameter.Value values = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_values_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_values(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PluginAdapter.Api.Label.Parameter.Value.Array)
  return target;
}

size_t Label_Parameter_Value_Array::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PluginAdapter.Api.Label.Parameter.Value.Array)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PluginAdapter.Api.Label.Parameter.Value values = 1;
  total_size += 1UL * this->_internal_values_size();
  for (const auto& msg : this->values_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Label_Parameter_Value_Array::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PluginAdapter.Api.Label.Parameter.Value.Array)
  GOOGLE_DCHECK_NE(&from, this);
  const Label_Parameter_Value_Array* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Label_Parameter_Value_Array>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PluginAdapter.Api.Label.Parameter.Value.Array)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PluginAdapter.Api.Label.Parameter.Value.Array)
    MergeFrom(*source);
  }
}

void Label_Parameter_Value_Array::MergeFrom(const Label_Parameter_Value_Array& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PluginAdapter.Api.Label.Parameter.Value.Array)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  values_.MergeFrom(from.values_);
}

void Label_Parameter_Value_Array::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PluginAdapter.Api.Label.Parameter.Value.Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Label_Parameter_Value_Array::CopyFrom(const Label_Parameter_Value_Array& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PluginAdapter.Api.Label.Parameter.Value.Array)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Label_Parameter_Value_Array::IsInitialized() const {
  return true;
}

void Label_Parameter_Value_Array::InternalSwap(Label_Parameter_Value_Array* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  values_.InternalSwap(&other->values_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Label_Parameter_Value_Array::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Label_Parameter_Value_Hash_Entry::_Internal {
 public:
  static const ::PluginAdapter::Api::Label_Parameter_Value& key(const Label_Parameter_Value_Hash_Entry* msg);
  static const ::PluginAdapter::Api::Label_Parameter_Value& value(const Label_Parameter_Value_Hash_Entry* msg);
};

const ::PluginAdapter::Api::Label_Parameter_Value&
Label_Parameter_Value_Hash_Entry::_Internal::key(const Label_Parameter_Value_Hash_Entry* msg) {
  return *msg->key_;
}
const ::PluginAdapter::Api::Label_Parameter_Value&
Label_Parameter_Value_Hash_Entry::_Internal::value(const Label_Parameter_Value_Hash_Entry* msg) {
  return *msg->value_;
}
Label_Parameter_Value_Hash_Entry::Label_Parameter_Value_Hash_Entry(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PluginAdapter.Api.Label.Parameter.Value.Hash.Entry)
}
Label_Parameter_Value_Hash_Entry::Label_Parameter_Value_Hash_Entry(const Label_Parameter_Value_Hash_Entry& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_key()) {
    key_ = new ::PluginAdapter::Api::Label_Parameter_Value(*from.key_);
  } else {
    key_ = nullptr;
  }
  if (from._internal_has_value()) {
    value_ = new ::PluginAdapter::Api::Label_Parameter_Value(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:PluginAdapter.Api.Label.Parameter.Value.Hash.Entry)
}

void Label_Parameter_Value_Hash_Entry::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Label_Parameter_Value_label_2eproto.base);
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&key_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&value_) -
      reinterpret_cast<char*>(&key_)) + sizeof(value_));
}

Label_Parameter_Value_Hash_Entry::~Label_Parameter_Value_Hash_Entry() {
  // @@protoc_insertion_point(destructor:PluginAdapter.Api.Label.Parameter.Value.Hash.Entry)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Label_Parameter_Value_Hash_Entry::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete key_;
  if (this != internal_default_instance()) delete value_;
}

void Label_Parameter_Value_Hash_Entry::ArenaDtor(void* object) {
  Label_Parameter_Value_Hash_Entry* _this = reinterpret_cast< Label_Parameter_Value_Hash_Entry* >(object);
  (void)_this;
}
void Label_Parameter_Value_Hash_Entry::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Label_Parameter_Value_Hash_Entry::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Label_Parameter_Value_Hash_Entry& Label_Parameter_Value_Hash_Entry::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Label_Parameter_Value_label_2eproto.base);
  return *internal_default_instance();
}


void Label_Parameter_Value_Hash_Entry::Clear() {
// @@protoc_insertion_point(message_clear_start:PluginAdapter.Api.Label.Parameter.Value.Hash.Entry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && key_ != nullptr) {
    delete key_;
  }
  key_ = nullptr;
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Label_Parameter_Value_Hash_Entry::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .PluginAdapter.Api.Label.Parameter.Value key = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_key(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .PluginAdapter.Api.Label.Parameter.Value value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Label_Parameter_Value_Hash_Entry::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PluginAdapter.Api.Label.Parameter.Value.Hash.Entry)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PluginAdapter.Api.Label.Parameter.Value key = 1;
  if (this->has_key()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::key(this), target, stream);
  }

  // .PluginAdapter.Api.Label.Parameter.Value value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PluginAdapter.Api.Label.Parameter.Value.Hash.Entry)
  return target;
}

size_t Label_Parameter_Value_Hash_Entry::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PluginAdapter.Api.Label.Parameter.Value.Hash.Entry)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .PluginAdapter.Api.Label.Parameter.Value key = 1;
  if (this->has_key()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *key_);
  }

  // .PluginAdapter.Api.Label.Parameter.Value value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Label_Parameter_Value_Hash_Entry::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PluginAdapter.Api.Label.Parameter.Value.Hash.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  const Label_Parameter_Value_Hash_Entry* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Label_Parameter_Value_Hash_Entry>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PluginAdapter.Api.Label.Parameter.Value.Hash.Entry)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PluginAdapter.Api.Label.Parameter.Value.Hash.Entry)
    MergeFrom(*source);
  }
}

void Label_Parameter_Value_Hash_Entry::MergeFrom(const Label_Parameter_Value_Hash_Entry& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PluginAdapter.Api.Label.Parameter.Value.Hash.Entry)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_key()) {
    _internal_mutable_key()->::PluginAdapter::Api::Label_Parameter_Value::MergeFrom(from._internal_key());
  }
  if (from.has_value()) {
    _internal_mutable_value()->::PluginAdapter::Api::Label_Parameter_Value::MergeFrom(from._internal_value());
  }
}

void Label_Parameter_Value_Hash_Entry::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PluginAdapter.Api.Label.Parameter.Value.Hash.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Label_Parameter_Value_Hash_Entry::CopyFrom(const Label_Parameter_Value_Hash_Entry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PluginAdapter.Api.Label.Parameter.Value.Hash.Entry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Label_Parameter_Value_Hash_Entry::IsInitialized() const {
  return true;
}

void Label_Parameter_Value_Hash_Entry::InternalSwap(Label_Parameter_Value_Hash_Entry* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Label_Parameter_Value_Hash_Entry, value_)
      + sizeof(Label_Parameter_Value_Hash_Entry::value_)
      - PROTOBUF_FIELD_OFFSET(Label_Parameter_Value_Hash_Entry, key_)>(
          reinterpret_cast<char*>(&key_),
          reinterpret_cast<char*>(&other->key_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Label_Parameter_Value_Hash_Entry::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Label_Parameter_Value_Hash::_Internal {
 public:
};

Label_Parameter_Value_Hash::Label_Parameter_Value_Hash(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  entries_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PluginAdapter.Api.Label.Parameter.Value.Hash)
}
Label_Parameter_Value_Hash::Label_Parameter_Value_Hash(const Label_Parameter_Value_Hash& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      entries_(from.entries_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PluginAdapter.Api.Label.Parameter.Value.Hash)
}

void Label_Parameter_Value_Hash::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Label_Parameter_Value_label_2eproto.base);
}

Label_Parameter_Value_Hash::~Label_Parameter_Value_Hash() {
  // @@protoc_insertion_point(destructor:PluginAdapter.Api.Label.Parameter.Value.Hash)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Label_Parameter_Value_Hash::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Label_Parameter_Value_Hash::ArenaDtor(void* object) {
  Label_Parameter_Value_Hash* _this = reinterpret_cast< Label_Parameter_Value_Hash* >(object);
  (void)_this;
}
void Label_Parameter_Value_Hash::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Label_Parameter_Value_Hash::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Label_Parameter_Value_Hash& Label_Parameter_Value_Hash::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Label_Parameter_Value_label_2eproto.base);
  return *internal_default_instance();
}


void Label_Parameter_Value_Hash::Clear() {
// @@protoc_insertion_point(message_clear_start:PluginAdapter.Api.Label.Parameter.Value.Hash)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  entries_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Label_Parameter_Value_Hash::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .PluginAdapter.Api.Label.Parameter.Value.Hash.Entry entries = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_entries(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Label_Parameter_Value_Hash::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PluginAdapter.Api.Label.Parameter.Value.Hash)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PluginAdapter.Api.Label.Parameter.Value.Hash.Entry entries = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_entries_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_entries(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PluginAdapter.Api.Label.Parameter.Value.Hash)
  return target;
}

size_t Label_Parameter_Value_Hash::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PluginAdapter.Api.Label.Parameter.Value.Hash)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PluginAdapter.Api.Label.Parameter.Value.Hash.Entry entries = 1;
  total_size += 1UL * this->_internal_entries_size();
  for (const auto& msg : this->entries_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Label_Parameter_Value_Hash::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PluginAdapter.Api.Label.Parameter.Value.Hash)
  GOOGLE_DCHECK_NE(&from, this);
  const Label_Parameter_Value_Hash* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Label_Parameter_Value_Hash>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PluginAdapter.Api.Label.Parameter.Value.Hash)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PluginAdapter.Api.Label.Parameter.Value.Hash)
    MergeFrom(*source);
  }
}

void Label_Parameter_Value_Hash::MergeFrom(const Label_Parameter_Value_Hash& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PluginAdapter.Api.Label.Parameter.Value.Hash)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  entries_.MergeFrom(from.entries_);
}

void Label_Parameter_Value_Hash::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PluginAdapter.Api.Label.Parameter.Value.Hash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Label_Parameter_Value_Hash::CopyFrom(const Label_Parameter_Value_Hash& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PluginAdapter.Api.Label.Parameter.Value.Hash)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Label_Parameter_Value_Hash::IsInitialized() const {
  return true;
}

void Label_Parameter_Value_Hash::InternalSwap(Label_Parameter_Value_Hash* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  entries_.InternalSwap(&other->entries_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Label_Parameter_Value_Hash::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Label_Parameter_Value::_Internal {
 public:
  static const ::PluginAdapter::Api::Label_Parameter_Value_Array& array(const Label_Parameter_Value* msg);
  static const ::PluginAdapter::Api::Label_Parameter_Value_Hash& struct_(const Label_Parameter_Value* msg);
  static const ::PluginAdapter::Api::Label_Parameter_Value_Hash& hash_value(const Label_Parameter_Value* msg);
};

const ::PluginAdapter::Api::Label_Parameter_Value_Array&
Label_Parameter_Value::_Internal::array(const Label_Parameter_Value* msg) {
  return *msg->type_.array_;
}
const ::PluginAdapter::Api::Label_Parameter_Value_Hash&
Label_Parameter_Value::_Internal::struct_(const Label_Parameter_Value* msg) {
  return *msg->type_.struct__;
}
const ::PluginAdapter::Api::Label_Parameter_Value_Hash&
Label_Parameter_Value::_Internal::hash_value(const Label_Parameter_Value* msg) {
  return *msg->type_.hash_value_;
}
void Label_Parameter_Value::set_allocated_array(::PluginAdapter::Api::Label_Parameter_Value_Array* array) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_type();
  if (array) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(array);
    if (message_arena != submessage_arena) {
      array = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, array, submessage_arena);
    }
    set_has_array();
    type_.array_ = array;
  }
  // @@protoc_insertion_point(field_set_allocated:PluginAdapter.Api.Label.Parameter.Value.array)
}
void Label_Parameter_Value::set_allocated_struct_(::PluginAdapter::Api::Label_Parameter_Value_Hash* struct_) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_type();
  if (struct_) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(struct_);
    if (message_arena != submessage_arena) {
      struct_ = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, struct_, submessage_arena);
    }
    set_has_struct_();
    type_.struct__ = struct_;
  }
  // @@protoc_insertion_point(field_set_allocated:PluginAdapter.Api.Label.Parameter.Value.struct)
}
void Label_Parameter_Value::set_allocated_hash_value(::PluginAdapter::Api::Label_Parameter_Value_Hash* hash_value) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_type();
  if (hash_value) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(hash_value);
    if (message_arena != submessage_arena) {
      hash_value = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, hash_value, submessage_arena);
    }
    set_has_hash_value();
    type_.hash_value_ = hash_value;
  }
  // @@protoc_insertion_point(field_set_allocated:PluginAdapter.Api.Label.Parameter.Value.hash_value)
}
Label_Parameter_Value::Label_Parameter_Value(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PluginAdapter.Api.Label.Parameter.Value)
}
Label_Parameter_Value::Label_Parameter_Value(const Label_Parameter_Value& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kString: {
      _internal_set_string(from._internal_string());
      break;
    }
    case kInteger: {
      _internal_set_integer(from._internal_integer());
      break;
    }
    case kDecimal: {
      _internal_set_decimal(from._internal_decimal());
      break;
    }
    case kBoolean: {
      _internal_set_boolean(from._internal_boolean());
      break;
    }
    case kDate: {
      _internal_set_date(from._internal_date());
      break;
    }
    case kArray: {
      _internal_mutable_array()->::PluginAdapter::Api::Label_Parameter_Value_Array::MergeFrom(from._internal_array());
      break;
    }
    case kStruct: {
      _internal_mutable_struct_()->::PluginAdapter::Api::Label_Parameter_Value_Hash::MergeFrom(from._internal_struct_());
      break;
    }
    case kHashValue: {
      _internal_mutable_hash_value()->::PluginAdapter::Api::Label_Parameter_Value_Hash::MergeFrom(from._internal_hash_value());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:PluginAdapter.Api.Label.Parameter.Value)
}

void Label_Parameter_Value::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Label_Parameter_Value_label_2eproto.base);
  clear_has_type();
}

Label_Parameter_Value::~Label_Parameter_Value() {
  // @@protoc_insertion_point(destructor:PluginAdapter.Api.Label.Parameter.Value)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Label_Parameter_Value::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_type()) {
    clear_type();
  }
}

void Label_Parameter_Value::ArenaDtor(void* object) {
  Label_Parameter_Value* _this = reinterpret_cast< Label_Parameter_Value* >(object);
  (void)_this;
}
void Label_Parameter_Value::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Label_Parameter_Value::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Label_Parameter_Value& Label_Parameter_Value::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Label_Parameter_Value_label_2eproto.base);
  return *internal_default_instance();
}


void Label_Parameter_Value::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:PluginAdapter.Api.Label.Parameter.Value)
  switch (type_case()) {
    case kString: {
      type_.string_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case kInteger: {
      // No need to clear
      break;
    }
    case kDecimal: {
      // No need to clear
      break;
    }
    case kBoolean: {
      // No need to clear
      break;
    }
    case kDate: {
      // No need to clear
      break;
    }
    case kArray: {
      if (GetArena() == nullptr) {
        delete type_.array_;
      }
      break;
    }
    case kStruct: {
      if (GetArena() == nullptr) {
        delete type_.struct__;
      }
      break;
    }
    case kHashValue: {
      if (GetArena() == nullptr) {
        delete type_.hash_value_;
      }
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void Label_Parameter_Value::Clear() {
// @@protoc_insertion_point(message_clear_start:PluginAdapter.Api.Label.Parameter.Value)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Label_Parameter_Value::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string string = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_string();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PluginAdapter.Api.Label.Parameter.Value.string"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 integer = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _internal_set_integer(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double decimal = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _internal_set_decimal(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // bool boolean = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _internal_set_boolean(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 date = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _internal_set_date(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .PluginAdapter.Api.Label.Parameter.Value.Array array = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_array(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .PluginAdapter.Api.Label.Parameter.Value.Hash struct = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_struct_(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .PluginAdapter.Api.Label.Parameter.Value.Hash hash_value = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_hash_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Label_Parameter_Value::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PluginAdapter.Api.Label.Parameter.Value)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string string = 1;
  if (_internal_has_string()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string().data(), static_cast<int>(this->_internal_string().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PluginAdapter.Api.Label.Parameter.Value.string");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_string(), target);
  }

  // int64 integer = 2;
  if (_internal_has_integer()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_integer(), target);
  }

  // double decimal = 3;
  if (_internal_has_decimal()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_decimal(), target);
  }

  // bool boolean = 4;
  if (_internal_has_boolean()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_boolean(), target);
  }

  // uint64 date = 5;
  if (_internal_has_date()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_date(), target);
  }

  // .PluginAdapter.Api.Label.Parameter.Value.Array array = 6;
  if (_internal_has_array()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::array(this), target, stream);
  }

  // .PluginAdapter.Api.Label.Parameter.Value.Hash struct = 7;
  if (_internal_has_struct_()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::struct_(this), target, stream);
  }

  // .PluginAdapter.Api.Label.Parameter.Value.Hash hash_value = 8;
  if (_internal_has_hash_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::hash_value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PluginAdapter.Api.Label.Parameter.Value)
  return target;
}

size_t Label_Parameter_Value::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PluginAdapter.Api.Label.Parameter.Value)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (type_case()) {
    // string string = 1;
    case kString: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string());
      break;
    }
    // int64 integer = 2;
    case kInteger: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
          this->_internal_integer());
      break;
    }
    // double decimal = 3;
    case kDecimal: {
      total_size += 1 + 8;
      break;
    }
    // bool boolean = 4;
    case kBoolean: {
      total_size += 1 + 1;
      break;
    }
    // uint64 date = 5;
    case kDate: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
          this->_internal_date());
      break;
    }
    // .PluginAdapter.Api.Label.Parameter.Value.Array array = 6;
    case kArray: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.array_);
      break;
    }
    // .PluginAdapter.Api.Label.Parameter.Value.Hash struct = 7;
    case kStruct: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.struct__);
      break;
    }
    // .PluginAdapter.Api.Label.Parameter.Value.Hash hash_value = 8;
    case kHashValue: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.hash_value_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Label_Parameter_Value::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PluginAdapter.Api.Label.Parameter.Value)
  GOOGLE_DCHECK_NE(&from, this);
  const Label_Parameter_Value* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Label_Parameter_Value>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PluginAdapter.Api.Label.Parameter.Value)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PluginAdapter.Api.Label.Parameter.Value)
    MergeFrom(*source);
  }
}

void Label_Parameter_Value::MergeFrom(const Label_Parameter_Value& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PluginAdapter.Api.Label.Parameter.Value)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kString: {
      _internal_set_string(from._internal_string());
      break;
    }
    case kInteger: {
      _internal_set_integer(from._internal_integer());
      break;
    }
    case kDecimal: {
      _internal_set_decimal(from._internal_decimal());
      break;
    }
    case kBoolean: {
      _internal_set_boolean(from._internal_boolean());
      break;
    }
    case kDate: {
      _internal_set_date(from._internal_date());
      break;
    }
    case kArray: {
      _internal_mutable_array()->::PluginAdapter::Api::Label_Parameter_Value_Array::MergeFrom(from._internal_array());
      break;
    }
    case kStruct: {
      _internal_mutable_struct_()->::PluginAdapter::Api::Label_Parameter_Value_Hash::MergeFrom(from._internal_struct_());
      break;
    }
    case kHashValue: {
      _internal_mutable_hash_value()->::PluginAdapter::Api::Label_Parameter_Value_Hash::MergeFrom(from._internal_hash_value());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void Label_Parameter_Value::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PluginAdapter.Api.Label.Parameter.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Label_Parameter_Value::CopyFrom(const Label_Parameter_Value& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PluginAdapter.Api.Label.Parameter.Value)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Label_Parameter_Value::IsInitialized() const {
  return true;
}

void Label_Parameter_Value::InternalSwap(Label_Parameter_Value* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Label_Parameter_Value::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Label_Parameter::_Internal {
 public:
  static const ::PluginAdapter::Api::Label_Parameter_Value& value(const Label_Parameter* msg);
};

const ::PluginAdapter::Api::Label_Parameter_Value&
Label_Parameter::_Internal::value(const Label_Parameter* msg) {
  return *msg->value_;
}
Label_Parameter::Label_Parameter(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PluginAdapter.Api.Label.Parameter)
}
Label_Parameter::Label_Parameter(const Label_Parameter& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  if (from._internal_has_value()) {
    value_ = new ::PluginAdapter::Api::Label_Parameter_Value(*from.value_);
  } else {
    value_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:PluginAdapter.Api.Label.Parameter)
}

void Label_Parameter::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Label_Parameter_label_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_ = nullptr;
}

Label_Parameter::~Label_Parameter() {
  // @@protoc_insertion_point(destructor:PluginAdapter.Api.Label.Parameter)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Label_Parameter::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete value_;
}

void Label_Parameter::ArenaDtor(void* object) {
  Label_Parameter* _this = reinterpret_cast< Label_Parameter* >(object);
  (void)_this;
}
void Label_Parameter::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Label_Parameter::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Label_Parameter& Label_Parameter::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Label_Parameter_label_2eproto.base);
  return *internal_default_instance();
}


void Label_Parameter::Clear() {
// @@protoc_insertion_point(message_clear_start:PluginAdapter.Api.Label.Parameter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  if (GetArena() == nullptr && value_ != nullptr) {
    delete value_;
  }
  value_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Label_Parameter::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PluginAdapter.Api.Label.Parameter.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .PluginAdapter.Api.Label.Parameter.Value value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_value(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Label_Parameter::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PluginAdapter.Api.Label.Parameter)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PluginAdapter.Api.Label.Parameter.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // .PluginAdapter.Api.Label.Parameter.Value value = 2;
  if (this->has_value()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::value(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PluginAdapter.Api.Label.Parameter)
  return target;
}

size_t Label_Parameter::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PluginAdapter.Api.Label.Parameter)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // .PluginAdapter.Api.Label.Parameter.Value value = 2;
  if (this->has_value()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *value_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Label_Parameter::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PluginAdapter.Api.Label.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  const Label_Parameter* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Label_Parameter>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PluginAdapter.Api.Label.Parameter)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PluginAdapter.Api.Label.Parameter)
    MergeFrom(*source);
  }
}

void Label_Parameter::MergeFrom(const Label_Parameter& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PluginAdapter.Api.Label.Parameter)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.has_value()) {
    _internal_mutable_value()->::PluginAdapter::Api::Label_Parameter_Value::MergeFrom(from._internal_value());
  }
}

void Label_Parameter::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PluginAdapter.Api.Label.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Label_Parameter::CopyFrom(const Label_Parameter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PluginAdapter.Api.Label.Parameter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Label_Parameter::IsInitialized() const {
  return true;
}

void Label_Parameter::InternalSwap(Label_Parameter* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Label_Parameter::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class Label::_Internal {
 public:
};

Label::Label(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  parameters_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:PluginAdapter.Api.Label)
}
Label::Label(const Label& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      parameters_(from.parameters_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_label().empty()) {
    label_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_label(), 
      GetArena());
  }
  channel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_channel().empty()) {
    channel_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_channel(), 
      GetArena());
  }
  physical_label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_physical_label().empty()) {
    physical_label_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_physical_label(), 
      GetArena());
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:PluginAdapter.Api.Label)
}

void Label::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Label_label_2eproto.base);
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  channel_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  physical_label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(type_));
}

Label::~Label() {
  // @@protoc_insertion_point(destructor:PluginAdapter.Api.Label)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Label::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  label_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  channel_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  physical_label_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Label::ArenaDtor(void* object) {
  Label* _this = reinterpret_cast< Label* >(object);
  (void)_this;
}
void Label::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Label::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Label& Label::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Label_label_2eproto.base);
  return *internal_default_instance();
}


void Label::Clear() {
// @@protoc_insertion_point(message_clear_start:PluginAdapter.Api.Label)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  parameters_.Clear();
  label_.ClearToEmpty();
  channel_.ClearToEmpty();
  physical_label_.ClearToEmpty();
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Label::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .PluginAdapter.Api.Label.LabelType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::PluginAdapter::Api::Label_LabelType>(val));
        } else goto handle_unusual;
        continue;
      // string label = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_label();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PluginAdapter.Api.Label.label"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string channel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_channel();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "PluginAdapter.Api.Label.channel"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .PluginAdapter.Api.Label.Parameter parameters = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_parameters(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // uint64 timestamp = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes physical_label = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_physical_label();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint64 correlation_id = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          correlation_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Label::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PluginAdapter.Api.Label)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PluginAdapter.Api.Label.LabelType type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_label().data(), static_cast<int>(this->_internal_label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PluginAdapter.Api.Label.label");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_label(), target);
  }

  // string channel = 3;
  if (this->channel().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_channel().data(), static_cast<int>(this->_internal_channel().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PluginAdapter.Api.Label.channel");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_channel(), target);
  }

  // repeated .PluginAdapter.Api.Label.Parameter parameters = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_parameters_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_parameters(i), target, stream);
  }

  // uint64 timestamp = 5;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(5, this->_internal_timestamp(), target);
  }

  // bytes physical_label = 6;
  if (this->physical_label().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_physical_label(), target);
  }

  // uint64 correlation_id = 7;
  if (this->correlation_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(7, this->_internal_correlation_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PluginAdapter.Api.Label)
  return target;
}

size_t Label::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PluginAdapter.Api.Label)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .PluginAdapter.Api.Label.Parameter parameters = 4;
  total_size += 1UL * this->_internal_parameters_size();
  for (const auto& msg : this->parameters_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string label = 2;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_label());
  }

  // string channel = 3;
  if (this->channel().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_channel());
  }

  // bytes physical_label = 6;
  if (this->physical_label().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_physical_label());
  }

  // uint64 timestamp = 5;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_timestamp());
  }

  // uint64 correlation_id = 7;
  if (this->correlation_id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_correlation_id());
  }

  // .PluginAdapter.Api.Label.LabelType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Label::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PluginAdapter.Api.Label)
  GOOGLE_DCHECK_NE(&from, this);
  const Label* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Label>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PluginAdapter.Api.Label)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PluginAdapter.Api.Label)
    MergeFrom(*source);
  }
}

void Label::MergeFrom(const Label& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PluginAdapter.Api.Label)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  parameters_.MergeFrom(from.parameters_);
  if (from.label().size() > 0) {
    _internal_set_label(from._internal_label());
  }
  if (from.channel().size() > 0) {
    _internal_set_channel(from._internal_channel());
  }
  if (from.physical_label().size() > 0) {
    _internal_set_physical_label(from._internal_physical_label());
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  if (from.correlation_id() != 0) {
    _internal_set_correlation_id(from._internal_correlation_id());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void Label::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PluginAdapter.Api.Label)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Label::CopyFrom(const Label& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PluginAdapter.Api.Label)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Label::IsInitialized() const {
  return true;
}

void Label::InternalSwap(Label* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  parameters_.InternalSwap(&other->parameters_);
  label_.Swap(&other->label_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  channel_.Swap(&other->channel_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  physical_label_.Swap(&other->physical_label_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Label, type_)
      + sizeof(Label::type_)
      - PROTOBUF_FIELD_OFFSET(Label, timestamp_)>(
          reinterpret_cast<char*>(&timestamp_),
          reinterpret_cast<char*>(&other->timestamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Label::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Api
}  // namespace PluginAdapter
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PluginAdapter::Api::Label_Parameter_Value_Array* Arena::CreateMaybeMessage< ::PluginAdapter::Api::Label_Parameter_Value_Array >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PluginAdapter::Api::Label_Parameter_Value_Array >(arena);
}
template<> PROTOBUF_NOINLINE ::PluginAdapter::Api::Label_Parameter_Value_Hash_Entry* Arena::CreateMaybeMessage< ::PluginAdapter::Api::Label_Parameter_Value_Hash_Entry >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PluginAdapter::Api::Label_Parameter_Value_Hash_Entry >(arena);
}
template<> PROTOBUF_NOINLINE ::PluginAdapter::Api::Label_Parameter_Value_Hash* Arena::CreateMaybeMessage< ::PluginAdapter::Api::Label_Parameter_Value_Hash >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PluginAdapter::Api::Label_Parameter_Value_Hash >(arena);
}
template<> PROTOBUF_NOINLINE ::PluginAdapter::Api::Label_Parameter_Value* Arena::CreateMaybeMessage< ::PluginAdapter::Api::Label_Parameter_Value >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PluginAdapter::Api::Label_Parameter_Value >(arena);
}
template<> PROTOBUF_NOINLINE ::PluginAdapter::Api::Label_Parameter* Arena::CreateMaybeMessage< ::PluginAdapter::Api::Label_Parameter >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PluginAdapter::Api::Label_Parameter >(arena);
}
template<> PROTOBUF_NOINLINE ::PluginAdapter::Api::Label* Arena::CreateMaybeMessage< ::PluginAdapter::Api::Label >(Arena* arena) {
  return Arena::CreateMessageInternal< ::PluginAdapter::Api::Label >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
