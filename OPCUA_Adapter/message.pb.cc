// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

#include "message.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_announcement_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_Announcement_announcement_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_configuration_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Configuration_configuration_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_label_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Label_label_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Error_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Ready_message_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Reset_message_2eproto;
namespace PluginAdapter {
namespace Api {
class Message_ResetDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Reset> _instance;
} _Message_Reset_default_instance_;
class Message_ReadyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Ready> _instance;
} _Message_Ready_default_instance_;
class Message_ErrorDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message_Error> _instance;
} _Message_Error_default_instance_;
class MessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Message> _instance;
  const ::PluginAdapter::Api::Message_Error* error_;
  const ::PluginAdapter::Api::Announcement* announcement_;
  const ::PluginAdapter::Api::Configuration* configuration_;
  const ::PluginAdapter::Api::Label* label_;
  const ::PluginAdapter::Api::Message_Reset* reset_;
  const ::PluginAdapter::Api::Message_Ready* ready_;
} _Message_default_instance_;
}  // namespace Api
}  // namespace PluginAdapter
static void InitDefaultsscc_info_Message_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PluginAdapter::Api::_Message_default_instance_;
    new (ptr) ::PluginAdapter::Api::Message();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PluginAdapter::Api::Message::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_Message_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 6, 0, InitDefaultsscc_info_Message_message_2eproto}, {
      &scc_info_Message_Error_message_2eproto.base,
      &scc_info_Announcement_announcement_2eproto.base,
      &scc_info_Configuration_configuration_2eproto.base,
      &scc_info_Label_label_2eproto.base,
      &scc_info_Message_Reset_message_2eproto.base,
      &scc_info_Message_Ready_message_2eproto.base,}};

static void InitDefaultsscc_info_Message_Error_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PluginAdapter::Api::_Message_Error_default_instance_;
    new (ptr) ::PluginAdapter::Api::Message_Error();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PluginAdapter::Api::Message_Error::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Error_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_Error_message_2eproto}, {}};

static void InitDefaultsscc_info_Message_Ready_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PluginAdapter::Api::_Message_Ready_default_instance_;
    new (ptr) ::PluginAdapter::Api::Message_Ready();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PluginAdapter::Api::Message_Ready::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Ready_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_Ready_message_2eproto}, {}};

static void InitDefaultsscc_info_Message_Reset_message_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::PluginAdapter::Api::_Message_Reset_default_instance_;
    new (ptr) ::PluginAdapter::Api::Message_Reset();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::PluginAdapter::Api::Message_Reset::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Message_Reset_message_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Message_Reset_message_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_message_2eproto[4];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_message_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_message_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_message_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Message_Reset, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Message_Ready, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Message_Error, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Message_Error, message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Message, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Message, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::PluginAdapter::Api::MessageDefaultTypeInternal, error_),
  offsetof(::PluginAdapter::Api::MessageDefaultTypeInternal, announcement_),
  offsetof(::PluginAdapter::Api::MessageDefaultTypeInternal, configuration_),
  offsetof(::PluginAdapter::Api::MessageDefaultTypeInternal, label_),
  offsetof(::PluginAdapter::Api::MessageDefaultTypeInternal, reset_),
  offsetof(::PluginAdapter::Api::MessageDefaultTypeInternal, ready_),
  PROTOBUF_FIELD_OFFSET(::PluginAdapter::Api::Message, type_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::PluginAdapter::Api::Message_Reset)},
  { 5, -1, sizeof(::PluginAdapter::Api::Message_Ready)},
  { 10, -1, sizeof(::PluginAdapter::Api::Message_Error)},
  { 16, -1, sizeof(::PluginAdapter::Api::Message)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PluginAdapter::Api::_Message_Reset_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PluginAdapter::Api::_Message_Ready_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PluginAdapter::Api::_Message_Error_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::PluginAdapter::Api::_Message_default_instance_),
};

const char descriptor_table_protodef_message_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rmessage.proto\022\021PluginAdapter.Api\032\013labe"
  "l.proto\032\022announcement.proto\032\023configurati"
  "on.proto\"\365\002\n\007Message\0221\n\005error\030\001 \001(\0132 .Pl"
  "uginAdapter.Api.Message.ErrorH\000\0227\n\014annou"
  "ncement\030\002 \001(\0132\037.PluginAdapter.Api.Announ"
  "cementH\000\0229\n\rconfiguration\030\003 \001(\0132 .Plugin"
  "Adapter.Api.ConfigurationH\000\022)\n\005label\030\004 \001"
  "(\0132\030.PluginAdapter.Api.LabelH\000\0221\n\005reset\030"
  "\005 \001(\0132 .PluginAdapter.Api.Message.ResetH"
  "\000\0221\n\005ready\030\006 \001(\0132 .PluginAdapter.Api.Mes"
  "sage.ReadyH\000\032\007\n\005Reset\032\007\n\005Ready\032\030\n\005Error\022"
  "\017\n\007message\030\001 \001(\tB\006\n\004typeb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_message_2eproto_deps[3] = {
  &::descriptor_table_announcement_2eproto,
  &::descriptor_table_configuration_2eproto,
  &::descriptor_table_label_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_message_2eproto_sccs[4] = {
  &scc_info_Message_message_2eproto.base,
  &scc_info_Message_Error_message_2eproto.base,
  &scc_info_Message_Ready_message_2eproto.base,
  &scc_info_Message_Reset_message_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_message_2eproto_once;
static bool descriptor_table_message_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_message_2eproto = {
  &descriptor_table_message_2eproto_initialized, descriptor_table_protodef_message_2eproto, "message.proto", 472,
  &descriptor_table_message_2eproto_once, descriptor_table_message_2eproto_sccs, descriptor_table_message_2eproto_deps, 4, 3,
  schemas, file_default_instances, TableStruct_message_2eproto::offsets,
  file_level_metadata_message_2eproto, 4, file_level_enum_descriptors_message_2eproto, file_level_service_descriptors_message_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_message_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_message_2eproto), true);
namespace PluginAdapter {
namespace Api {

// ===================================================================

void Message_Reset::InitAsDefaultInstance() {
}
class Message_Reset::_Internal {
 public:
};

Message_Reset::Message_Reset()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PluginAdapter.Api.Message.Reset)
}
Message_Reset::Message_Reset(const Message_Reset& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PluginAdapter.Api.Message.Reset)
}

void Message_Reset::SharedCtor() {
}

Message_Reset::~Message_Reset() {
  // @@protoc_insertion_point(destructor:PluginAdapter.Api.Message.Reset)
  SharedDtor();
}

void Message_Reset::SharedDtor() {
}

void Message_Reset::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Reset& Message_Reset::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Reset_message_2eproto.base);
  return *internal_default_instance();
}


void Message_Reset::Clear() {
// @@protoc_insertion_point(message_clear_start:PluginAdapter.Api.Message.Reset)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Message_Reset::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Reset::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PluginAdapter.Api.Message.Reset)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PluginAdapter.Api.Message.Reset)
  return target;
}

size_t Message_Reset::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PluginAdapter.Api.Message.Reset)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Reset::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PluginAdapter.Api.Message.Reset)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Reset* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Reset>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PluginAdapter.Api.Message.Reset)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PluginAdapter.Api.Message.Reset)
    MergeFrom(*source);
  }
}

void Message_Reset::MergeFrom(const Message_Reset& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PluginAdapter.Api.Message.Reset)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Message_Reset::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PluginAdapter.Api.Message.Reset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Reset::CopyFrom(const Message_Reset& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PluginAdapter.Api.Message.Reset)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Reset::IsInitialized() const {
  return true;
}

void Message_Reset::InternalSwap(Message_Reset* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Reset::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_Ready::InitAsDefaultInstance() {
}
class Message_Ready::_Internal {
 public:
};

Message_Ready::Message_Ready()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PluginAdapter.Api.Message.Ready)
}
Message_Ready::Message_Ready(const Message_Ready& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PluginAdapter.Api.Message.Ready)
}

void Message_Ready::SharedCtor() {
}

Message_Ready::~Message_Ready() {
  // @@protoc_insertion_point(destructor:PluginAdapter.Api.Message.Ready)
  SharedDtor();
}

void Message_Ready::SharedDtor() {
}

void Message_Ready::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Ready& Message_Ready::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Ready_message_2eproto.base);
  return *internal_default_instance();
}


void Message_Ready::Clear() {
// @@protoc_insertion_point(message_clear_start:PluginAdapter.Api.Message.Ready)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

const char* Message_Ready::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      default: {
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Ready::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PluginAdapter.Api.Message.Ready)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PluginAdapter.Api.Message.Ready)
  return target;
}

size_t Message_Ready::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PluginAdapter.Api.Message.Ready)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Ready::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PluginAdapter.Api.Message.Ready)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Ready* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Ready>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PluginAdapter.Api.Message.Ready)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PluginAdapter.Api.Message.Ready)
    MergeFrom(*source);
  }
}

void Message_Ready::MergeFrom(const Message_Ready& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PluginAdapter.Api.Message.Ready)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Message_Ready::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PluginAdapter.Api.Message.Ready)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Ready::CopyFrom(const Message_Ready& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PluginAdapter.Api.Message.Ready)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Ready::IsInitialized() const {
  return true;
}

void Message_Ready::InternalSwap(Message_Ready* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Ready::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message_Error::InitAsDefaultInstance() {
}
class Message_Error::_Internal {
 public:
};

Message_Error::Message_Error()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PluginAdapter.Api.Message.Error)
}
Message_Error::Message_Error(const Message_Error& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  // @@protoc_insertion_point(copy_constructor:PluginAdapter.Api.Message.Error)
}

void Message_Error::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_Error_message_2eproto.base);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

Message_Error::~Message_Error() {
  // @@protoc_insertion_point(destructor:PluginAdapter.Api.Message.Error)
  SharedDtor();
}

void Message_Error::SharedDtor() {
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Message_Error::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message_Error& Message_Error::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_Error_message_2eproto.base);
  return *internal_default_instance();
}


void Message_Error::Clear() {
// @@protoc_insertion_point(message_clear_start:PluginAdapter.Api.Message.Error)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* Message_Error::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_message(), ptr, ctx, "PluginAdapter.Api.Message.Error.message");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message_Error::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PluginAdapter.Api.Message.Error)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "PluginAdapter.Api.Message.Error.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PluginAdapter.Api.Message.Error)
  return target;
}

size_t Message_Error::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PluginAdapter.Api.Message.Error)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message_Error::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PluginAdapter.Api.Message.Error)
  GOOGLE_DCHECK_NE(&from, this);
  const Message_Error* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message_Error>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PluginAdapter.Api.Message.Error)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PluginAdapter.Api.Message.Error)
    MergeFrom(*source);
  }
}

void Message_Error::MergeFrom(const Message_Error& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PluginAdapter.Api.Message.Error)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
}

void Message_Error::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PluginAdapter.Api.Message.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message_Error::CopyFrom(const Message_Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PluginAdapter.Api.Message.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message_Error::IsInitialized() const {
  return true;
}

void Message_Error::InternalSwap(Message_Error* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata Message_Error::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Message::InitAsDefaultInstance() {
  ::PluginAdapter::Api::_Message_default_instance_.error_ = const_cast< ::PluginAdapter::Api::Message_Error*>(
      ::PluginAdapter::Api::Message_Error::internal_default_instance());
  ::PluginAdapter::Api::_Message_default_instance_.announcement_ = const_cast< ::PluginAdapter::Api::Announcement*>(
      ::PluginAdapter::Api::Announcement::internal_default_instance());
  ::PluginAdapter::Api::_Message_default_instance_.configuration_ = const_cast< ::PluginAdapter::Api::Configuration*>(
      ::PluginAdapter::Api::Configuration::internal_default_instance());
  ::PluginAdapter::Api::_Message_default_instance_.label_ = const_cast< ::PluginAdapter::Api::Label*>(
      ::PluginAdapter::Api::Label::internal_default_instance());
  ::PluginAdapter::Api::_Message_default_instance_.reset_ = const_cast< ::PluginAdapter::Api::Message_Reset*>(
      ::PluginAdapter::Api::Message_Reset::internal_default_instance());
  ::PluginAdapter::Api::_Message_default_instance_.ready_ = const_cast< ::PluginAdapter::Api::Message_Ready*>(
      ::PluginAdapter::Api::Message_Ready::internal_default_instance());
}
class Message::_Internal {
 public:
  static const ::PluginAdapter::Api::Message_Error& error(const Message* msg);
  static const ::PluginAdapter::Api::Announcement& announcement(const Message* msg);
  static const ::PluginAdapter::Api::Configuration& configuration(const Message* msg);
  static const ::PluginAdapter::Api::Label& label(const Message* msg);
  static const ::PluginAdapter::Api::Message_Reset& reset(const Message* msg);
  static const ::PluginAdapter::Api::Message_Ready& ready(const Message* msg);
};

const ::PluginAdapter::Api::Message_Error&
Message::_Internal::error(const Message* msg) {
  return *msg->type_.error_;
}
const ::PluginAdapter::Api::Announcement&
Message::_Internal::announcement(const Message* msg) {
  return *msg->type_.announcement_;
}
const ::PluginAdapter::Api::Configuration&
Message::_Internal::configuration(const Message* msg) {
  return *msg->type_.configuration_;
}
const ::PluginAdapter::Api::Label&
Message::_Internal::label(const Message* msg) {
  return *msg->type_.label_;
}
const ::PluginAdapter::Api::Message_Reset&
Message::_Internal::reset(const Message* msg) {
  return *msg->type_.reset_;
}
const ::PluginAdapter::Api::Message_Ready&
Message::_Internal::ready(const Message* msg) {
  return *msg->type_.ready_;
}
void Message::set_allocated_error(::PluginAdapter::Api::Message_Error* error) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (error) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      error = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, error, submessage_arena);
    }
    set_has_error();
    type_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:PluginAdapter.Api.Message.error)
}
void Message::set_allocated_announcement(::PluginAdapter::Api::Announcement* announcement) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (announcement) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      announcement = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, announcement, submessage_arena);
    }
    set_has_announcement();
    type_.announcement_ = announcement;
  }
  // @@protoc_insertion_point(field_set_allocated:PluginAdapter.Api.Message.announcement)
}
void Message::clear_announcement() {
  if (_internal_has_announcement()) {
    delete type_.announcement_;
    clear_has_type();
  }
}
void Message::set_allocated_configuration(::PluginAdapter::Api::Configuration* configuration) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (configuration) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      configuration = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, configuration, submessage_arena);
    }
    set_has_configuration();
    type_.configuration_ = configuration;
  }
  // @@protoc_insertion_point(field_set_allocated:PluginAdapter.Api.Message.configuration)
}
void Message::clear_configuration() {
  if (_internal_has_configuration()) {
    delete type_.configuration_;
    clear_has_type();
  }
}
void Message::set_allocated_label(::PluginAdapter::Api::Label* label) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (label) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      label = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, label, submessage_arena);
    }
    set_has_label();
    type_.label_ = label;
  }
  // @@protoc_insertion_point(field_set_allocated:PluginAdapter.Api.Message.label)
}
void Message::clear_label() {
  if (_internal_has_label()) {
    delete type_.label_;
    clear_has_type();
  }
}
void Message::set_allocated_reset(::PluginAdapter::Api::Message_Reset* reset) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (reset) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      reset = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, reset, submessage_arena);
    }
    set_has_reset();
    type_.reset_ = reset;
  }
  // @@protoc_insertion_point(field_set_allocated:PluginAdapter.Api.Message.reset)
}
void Message::set_allocated_ready(::PluginAdapter::Api::Message_Ready* ready) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_type();
  if (ready) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      ready = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, ready, submessage_arena);
    }
    set_has_ready();
    type_.ready_ = ready;
  }
  // @@protoc_insertion_point(field_set_allocated:PluginAdapter.Api.Message.ready)
}
Message::Message()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PluginAdapter.Api.Message)
}
Message::Message(const Message& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_type();
  switch (from.type_case()) {
    case kError: {
      _internal_mutable_error()->::PluginAdapter::Api::Message_Error::MergeFrom(from._internal_error());
      break;
    }
    case kAnnouncement: {
      _internal_mutable_announcement()->::PluginAdapter::Api::Announcement::MergeFrom(from._internal_announcement());
      break;
    }
    case kConfiguration: {
      _internal_mutable_configuration()->::PluginAdapter::Api::Configuration::MergeFrom(from._internal_configuration());
      break;
    }
    case kLabel: {
      _internal_mutable_label()->::PluginAdapter::Api::Label::MergeFrom(from._internal_label());
      break;
    }
    case kReset: {
      _internal_mutable_reset()->::PluginAdapter::Api::Message_Reset::MergeFrom(from._internal_reset());
      break;
    }
    case kReady: {
      _internal_mutable_ready()->::PluginAdapter::Api::Message_Ready::MergeFrom(from._internal_ready());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:PluginAdapter.Api.Message)
}

void Message::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Message_message_2eproto.base);
  clear_has_type();
}

Message::~Message() {
  // @@protoc_insertion_point(destructor:PluginAdapter.Api.Message)
  SharedDtor();
}

void Message::SharedDtor() {
  if (has_type()) {
    clear_type();
  }
}

void Message::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Message& Message::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Message_message_2eproto.base);
  return *internal_default_instance();
}


void Message::clear_type() {
// @@protoc_insertion_point(one_of_clear_start:PluginAdapter.Api.Message)
  switch (type_case()) {
    case kError: {
      delete type_.error_;
      break;
    }
    case kAnnouncement: {
      delete type_.announcement_;
      break;
    }
    case kConfiguration: {
      delete type_.configuration_;
      break;
    }
    case kLabel: {
      delete type_.label_;
      break;
    }
    case kReset: {
      delete type_.reset_;
      break;
    }
    case kReady: {
      delete type_.ready_;
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TYPE_NOT_SET;
}


void Message::Clear() {
// @@protoc_insertion_point(message_clear_start:PluginAdapter.Api.Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_type();
  _internal_metadata_.Clear();
}

const char* Message::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .PluginAdapter.Api.Message.Error error = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_error(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .PluginAdapter.Api.Announcement announcement = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_announcement(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .PluginAdapter.Api.Configuration configuration = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_configuration(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .PluginAdapter.Api.Label label = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_label(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .PluginAdapter.Api.Message.Reset reset = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_reset(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .PluginAdapter.Api.Message.Ready ready = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_ready(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Message::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:PluginAdapter.Api.Message)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .PluginAdapter.Api.Message.Error error = 1;
  if (_internal_has_error()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, _Internal::error(this), target, stream);
  }

  // .PluginAdapter.Api.Announcement announcement = 2;
  if (_internal_has_announcement()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::announcement(this), target, stream);
  }

  // .PluginAdapter.Api.Configuration configuration = 3;
  if (_internal_has_configuration()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, _Internal::configuration(this), target, stream);
  }

  // .PluginAdapter.Api.Label label = 4;
  if (_internal_has_label()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, _Internal::label(this), target, stream);
  }

  // .PluginAdapter.Api.Message.Reset reset = 5;
  if (_internal_has_reset()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, _Internal::reset(this), target, stream);
  }

  // .PluginAdapter.Api.Message.Ready ready = 6;
  if (_internal_has_ready()) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, _Internal::ready(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PluginAdapter.Api.Message)
  return target;
}

size_t Message::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PluginAdapter.Api.Message)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (type_case()) {
    // .PluginAdapter.Api.Message.Error error = 1;
    case kError: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.error_);
      break;
    }
    // .PluginAdapter.Api.Announcement announcement = 2;
    case kAnnouncement: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.announcement_);
      break;
    }
    // .PluginAdapter.Api.Configuration configuration = 3;
    case kConfiguration: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.configuration_);
      break;
    }
    // .PluginAdapter.Api.Label label = 4;
    case kLabel: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.label_);
      break;
    }
    // .PluginAdapter.Api.Message.Reset reset = 5;
    case kReset: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.reset_);
      break;
    }
    // .PluginAdapter.Api.Message.Ready ready = 6;
    case kReady: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *type_.ready_);
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Message::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PluginAdapter.Api.Message)
  GOOGLE_DCHECK_NE(&from, this);
  const Message* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Message>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PluginAdapter.Api.Message)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PluginAdapter.Api.Message)
    MergeFrom(*source);
  }
}

void Message::MergeFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PluginAdapter.Api.Message)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.type_case()) {
    case kError: {
      _internal_mutable_error()->::PluginAdapter::Api::Message_Error::MergeFrom(from._internal_error());
      break;
    }
    case kAnnouncement: {
      _internal_mutable_announcement()->::PluginAdapter::Api::Announcement::MergeFrom(from._internal_announcement());
      break;
    }
    case kConfiguration: {
      _internal_mutable_configuration()->::PluginAdapter::Api::Configuration::MergeFrom(from._internal_configuration());
      break;
    }
    case kLabel: {
      _internal_mutable_label()->::PluginAdapter::Api::Label::MergeFrom(from._internal_label());
      break;
    }
    case kReset: {
      _internal_mutable_reset()->::PluginAdapter::Api::Message_Reset::MergeFrom(from._internal_reset());
      break;
    }
    case kReady: {
      _internal_mutable_ready()->::PluginAdapter::Api::Message_Ready::MergeFrom(from._internal_ready());
      break;
    }
    case TYPE_NOT_SET: {
      break;
    }
  }
}

void Message::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PluginAdapter.Api.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Message::CopyFrom(const Message& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PluginAdapter.Api.Message)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Message::IsInitialized() const {
  return true;
}

void Message::InternalSwap(Message* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(type_, other->type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Message::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Api
}  // namespace PluginAdapter
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::PluginAdapter::Api::Message_Reset* Arena::CreateMaybeMessage< ::PluginAdapter::Api::Message_Reset >(Arena* arena) {
  return Arena::CreateInternal< ::PluginAdapter::Api::Message_Reset >(arena);
}
template<> PROTOBUF_NOINLINE ::PluginAdapter::Api::Message_Ready* Arena::CreateMaybeMessage< ::PluginAdapter::Api::Message_Ready >(Arena* arena) {
  return Arena::CreateInternal< ::PluginAdapter::Api::Message_Ready >(arena);
}
template<> PROTOBUF_NOINLINE ::PluginAdapter::Api::Message_Error* Arena::CreateMaybeMessage< ::PluginAdapter::Api::Message_Error >(Arena* arena) {
  return Arena::CreateInternal< ::PluginAdapter::Api::Message_Error >(arena);
}
template<> PROTOBUF_NOINLINE ::PluginAdapter::Api::Message* Arena::CreateMaybeMessage< ::PluginAdapter::Api::Message >(Arena* arena) {
  return Arena::CreateInternal< ::PluginAdapter::Api::Message >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
